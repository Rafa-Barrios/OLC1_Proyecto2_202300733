entero edad con valor 30 + 20 ;
double Salario con valor 10.5 ;
cadena saludo con valor "Jefferson";
imprimir edad + 10.5;
imprimir "edad" - 10;
imprimir "hola" == "hola";
imprimir !("hola" == "hola" && "mundo" == "mundo"); //este tiene error
si ( edad > 18 ) { 
    imprimir "es mayor de edad";
    imprimir "hola " + saludo;
    edad = 10;
}
imprimir "\tNueva edad:\n" + edad + "\nAdiós";

entero x con valor 10;
imprimir x;
imprimir 10 > 5;
imprimir x > 10;

entero resultado con valor 0 ;
funcion entero suma ( ) {
    resultado = 30 + 20 ;
    retornar resultado ;
}

resultado = ejecutar suma() ;

imprimir "Resultado: " + resultado;

entero i con valor 0 ;
//i ++
//Simprimir i;

//hola

/*
que tal estan
jejeje
*/

cadena saludos con valor "holaaaaa";
imprimir saludos;

// Caracter
caracter letra con valor 'A';
imprimir letra;

caracter letraz con valor 'Z';
imprimir letraz;

// Cadenas con secuencias de escape
cadena saludoConNuevaLinea con valor "Hola\nMundo";
cadena saludoConTab con valor "Esto\tes\ttabulado";
cadena rutaConBarra con valor "C:\\miCarpeta";
cadena comillasDobles con valor "\"Esto es una cadena\"";
cadena comillasSimples con valor "'Esto son comillas simples'";

// Caracteres con secuencias de escape
cadena saltoLinea con valor "\n";
cadena tabulacion con valor "\t";
cadena comillaDoble con valor "\"";
cadena comillaSimple con valor "\'";

// Imprimir todo
imprimir saludoConNuevaLinea;
imprimir saludoConTab;
imprimir rutaConBarra;
imprimir comillasDobles;
imprimir comillasSimples;

imprimir saltoLinea;
imprimir tabulacion;
imprimir comillaDoble;
imprimir comillaSimple;

// Prueba de Operadores Aritméticos: Suma

// Entero + ...
entero a con valor 5;
entero b con valor 10;
double c con valor 3.5;
boolean d con valor true;
caracter e con valor 'A';
cadena f con valor "Hola";
imprimir a;
imprimir b;
imprimir c;
imprimir d;
imprimir e;
imprimir f;
imprimir saltoLinea;

cadena sumaaaaaa con valor "sumaaaaaa";
imprimir sumaaaaaa;
// Entero + Entero
imprimir a + b;      // Esperado: Entero (15)
imprimir a + c;      // Esperado: Decimal (8.5)
imprimir a + d;      // Esperado: Entero (6)
imprimir a + e;      // Esperado: Entero (70, si 'A' se convierte a código ASCII)
imprimir a + f;      // Esperado: Cadena ("5Hola")
imprimir saltoLinea;

// Decimal + ...
imprimir c + a;      // Decimal
imprimir c + c;      // Decimal
imprimir c + d;      // Decimal
imprimir c + e;      // Decimal
imprimir c + f;      // Cadena
imprimir saltoLinea;

// Boolean + ...
imprimir d + a;      // Entero
imprimir d + c;      // Decimal
imprimir d + d;      // Null (error)
imprimir d + e;      // Null (error)
imprimir d + f;      // Cadena
imprimir saltoLinea;

// Carácter + ...
imprimir e + a;      // Entero
imprimir e + c;      // Decimal
imprimir e + d;      // Null (error)
imprimir e + e;      // Cadena ("AA")
imprimir e + f;      // Cadena
imprimir saltoLinea;

// Cadena + ...
imprimir f + a;      // Cadena
imprimir f + c;      // Cadena
imprimir f + d;      // Cadena
imprimir f + e;      // Cadena
imprimir f + f;      // Cadena
imprimir saltoLinea;

// Prueba de Operadores Aritméticos: Resta
cadena restaaaaaaa con valor "restaaaaaaa";
imprimir restaaaaaaa;

// Entero - ...
imprimir a - b;      // Esperado: Entero (-5)
imprimir a - c;      // Esperado: Decimal (1.5)
imprimir a - d;      // Esperado: Entero (4)
imprimir a - e;      // Esperado: Entero (-60, si 'A' es código ASCII)
imprimir saltoLinea;

// Decimal - ...
imprimir c - a;      // Esperado: Decimal (-1.5)
imprimir c - c;      // Esperado: Decimal (0)
imprimir c - d;      // Esperado: Decimal (2.5)
imprimir c - e;      // Esperado: Decimal (-61.5)
imprimir saltoLinea;

// Boolean - ...
imprimir d - a;      // Esperado: Entero (-4)
imprimir d - c;      // Esperado: Decimal (-2.5)
imprimir d - d;      // Esperado: Null (error)
imprimir d - e;      // Esperado: Null (error)
imprimir saltoLinea;

// Caracter - ...
imprimir e - a;      // Esperado: Entero (60)
imprimir e - c;      // Esperado: Decimal (61.5)
imprimir e - d;      // Esperado: Null (error)
imprimir e - e;      // Esperado: Null (error)
imprimir saltoLinea;

cadena multi con valor "multi";
imprimir multi;

// Entero * ...
imprimir a * b;      // Esperado: 50 (Entero)
imprimir a * c;      // Esperado: 17.5 (Decimal)
imprimir a * e;      // Esperado: 325 (Entero, 5 * 65)
imprimir saltoLinea;

// Decimal * ...
imprimir c * a;      // Esperado: 17.5 (Decimal)
imprimir c * c;      // Esperado: 12.25 (Decimal)
imprimir c * e;      // Esperado: 227.5 (Decimal, 3.5 * 65)
imprimir saltoLinea;

// Caracter * ...
imprimir e * a;      // Esperado: 325 (Entero, 65 * 5)
imprimir e * c;      // Esperado: 227.5 (Decimal, 65 * 3.5)
imprimir e * e;      // Esperado: NULL (Caracter * Caracter no permitido)
imprimir saltoLinea;

//hay que cambiarle los valores para la divicions porque sus resultados son para otros datos
cadena diviiiiii con valor "diviiiiii";
imprimir diviiiiii;

// Entero / ...
imprimir a / b;      // Esperado: 5 (Decimal)
imprimir a / c;      // Esperado: 2.857142857142857 (Decimal)
imprimir a / d;      // Esperado: 10 (Decimal, true -> 1)
imprimir saltoLinea;

// Decimal / ...
imprimir c / a;      // Esperado: 0.35 (Decimal)
imprimir c / c;      // Esperado: 1 (Decimal)
imprimir c / d;      // Esperado: 3.5 (Decimal, true -> 1)
imprimir saltoLinea;

// Carácter / ...
imprimir e / a;      // Esperado: 6.5 (Decimal, 65 / 10)
imprimir e / c;      // Esperado: 18.571428571428573 (Decimal, 65 / 3.5)
imprimir e / e;      // Esperado: NULL (Caracter / Caracter no es válido)
imprimir saltoLinea;

// Prueba de Operadores Aritméticos: Potencia (^)
//hay que cambiarle los valores para la Potencia porque sus resultados son para otros datos
imprimir "=== POTENCIA ===";

// Entero ^ ...
imprimir a ^ b;   // Entero ^ Entero → Entero (2^4 = 16)
imprimir a ^ c;   // Entero ^ Decimal → Decimal (2^2.5 ≈ 5.656)
imprimir saltoLinea;

// Decimal ^ ...
imprimir c ^ a;   // Decimal ^ Entero → Decimal (2.5^2 = 6.25)
imprimir c ^ c;   // Decimal ^ Decimal → Decimal (2.5^2.5 ≈ 9.882)
imprimir saltoLinea;

// === MÓDULO ===
//hay que cambiarle los valores para la modulo porque sus resultados son para otros datos
imprimir "=== MÓDULO ===";

// === Entero % ...
imprimir a % a;   // Esperado: Decimal (10 % 10 = 0)
imprimir a % b;   // Esperado: Decimal (10 % 4.5 = 1)
imprimir saltoLinea;

// === Decimal % ...
imprimir b % a;   // Esperado: Decimal (4.5 % 10 = 4.5)
imprimir b % b;   // Esperado: Decimal (4.5 % 4.5 = 0)
imprimir saltoLinea;

// Prueba de Operadores Aritméticos: negativo
imprimir "=== negacion unarria o algo asi  ===";

imprimir -a;
imprimir -c;
imprimir -(a + c);
imprimir saltoLinea;

//comparaciones
imprimir "=== COMPARACIONES ===";

// ==  (igual)
imprimir a == b;          // false
imprimir a == 5;          // true
imprimir f == "Hola";     // true
imprimir saltoLinea;

// !=  (diferente)
imprimir a != b;          // true
imprimir f != "Mundo";    // true
imprimir f != "Hola";     // false
imprimir saltoLinea;

// >  (mayor que)
imprimir b > a;           // true
imprimir a > b;           // false
imprimir a > c;           // true (5 > 3.5)
imprimir saltoLinea;

// <  (menor que)
imprimir a < b;           // true
imprimir b < c;           // false
imprimir saltoLinea;

// >=  (mayor o igual que)
imprimir a >= b;          // false
imprimir b >= a;          // true
imprimir a >= 5;          // true
imprimir saltoLinea;

// <=  (menor o igual que)
imprimir a <= b;          // true
imprimir b <= a;          // false
imprimir a <= 5;          // true
imprimir saltoLinea;

//extra
imprimir a == e;
imprimir c != e;
imprimir e != e;
imprimir e == 'A';
imprimir saltoLinea;


//ternarios
imprimir "=== ternarios ===";

entero edad con valor 18;
boolean banderaEdad con valor edad > 17 ? true : false;
imprimir banderaEdad;

entero edad2 con valor 15;
cadena mensaje con valor edad2 >= 18 ? "Eres mayor de edad" : "Eres menor de edad";
imprimir mensaje;

entero x con valor 5;
entero y con valor 10;
entero mayor con valor x > y ? x : y;
imprimir mayor;

caracter letra con valor 'B';
cadena tipoLetra con valor letra == 'A' ? "Primera letra" : "Otra letra";
imprimir tipoLetra;

entero edad3 con valor 20;
cadena rango con valor edad3 < 13 ? "Niño" : edad3 < 18 ? "Adolescente" : "Adulto";
imprimir rango;
imprimir saltoLinea;

//logicoss
imprimir "=== logicoss ===";

boolean r con valor true;
boolean s con valor false;

imprimir r || s;       // true
imprimir r && s;       // false
imprimir !r;           // false
imprimir !(r || s);    // false
imprimir !s;           // true
imprimir saltoLinea;

/*
Bloque de declaraciones y todo sus tipos pero ya tenemos otras declaraciones, si queremos probarals pegarlas en archivo limpio

// Declaraciones simples
entero edad;
entero edad2 con valor 18;
double pi con valor 3.1416;
boolean bandera con valor true;
cadena nombre con valor "Angel";
caracter letra con valor 'A';

// Asignaciones simples
edad = 25;
nombre = "Rafael";
bandera = false;

// Declaraciones múltiples con valor
entero a, b, c con valor 10, 20, 30;
double x, y con valor 1.5, 2.5;
boolean t1, t2 con valor true, false;
cadena s1, s2, s3 con valor "uno", "dos", "tres";

// Declaraciones múltiples sin valor
entero num1, num2, num3;
double dx, dy;
boolean bb1, bb2;

// Asignaciones posteriores a múltiples declaraciones
num1 = 100;
num2 = 200;
num3 = num1 + num2;

// Casos dentro de bloque (locales)
si (true) {
    entero local1 con valor 5;
    entero local2;
    local2 = local1 * 2;
    imprimir local2;
}

// Impresiones finales
imprimir edad;
imprimir edad2;
imprimir pi;
imprimir bandera;
imprimir nombre;
imprimir a;
imprimir b;
imprimir c;
imprimir x;
imprimir y;
imprimir t1;
imprimir num2;
imprimir num3;
imprimir num1;
imprimir s1;
imprimir s2;
imprimir s3;
imprimir dx;
*/

//casteos
imprimir "=== casteos ===";

entero edad5 con valor (entero) 15.6;
caracter letra5 con valor (caracter) 70;
double precio5;
precio5 = (double) 16;

imprimir edad5;
imprimir letra5;
imprimir precio5;
imprimir saltoLinea;

//Icre y Decre
imprimir "=== Icre y Decre ===";

// Declaración de variables
entero edad6 con valor 18;
entero contador6 con valor 0;

// Incremento
edad6++;
contador6++;

// Decremento
edad6--;
contador6--;

// Imprimir resultados
imprimir edad6;      // Esperado: 18
imprimir contador6;   // Esperado: 0

// Combinación
edad6++;
edad6++;
edad6--;
imprimir edad6;      // Esperado: 19

contador6++;
contador6++;
contador6++;
contador6--;
imprimir contador6;   // Esperado: 2
imprimir saltoLinea;

//vectoress
imprimir "=== vectoress ===";

// === Declaración de vectores ===
entero[] vector1 = vector entero[3];
cadena[] vector2 = ["Hola", "Mundo"];
entero[][] vector3 = [[1,2],[3,4]];
cadena[][] vector4 = [["A","B"],["C","D"]];

// === Reasignación de vectores ===
vector1[0] = 10;
vector1[1] = 20;

vector2[1] = "Adios";
vector2[0] = "Hola Mundo";

vector3[0][1] = 99;
vector4[1][0] = "Z";

// === Impresiones ===
imprimir vector1[0];     // 10
imprimir vector1[1];     // 20
imprimir vector2[0];     // "Hola Mundo"
imprimir vector2[1];     // "Adios"
imprimir vector3[0][1];  // 99
imprimir vector4[1][0];  // "Z"
imprimir saltoLinea;

//si 
imprimir "=== siiiiiiiu  ===";

entero xxx con valor 10;

si (xxx > 15) {
    imprimir "Mayor a 15";
} o si (xxx > 5) {
    imprimir "Mayor a 5";
} de lo contrario {
    imprimir "5 o menos";
}
imprimir saltoLinea;

// =====  MIENTRAS =====
imprimir "=== MIENTRAS ===";

// Declaración inicial
entero contador con valor 0;

// Ciclo mientras simple
mientras (contador < 5) {
    imprimir contador;
    contador++;
}

imprimir "Fin del ciclo mientras";
imprimir saltoLinea;

// =====  PARA =====
imprimir "=== PARA ===";

// Declaración inicial y ciclo
entero i con valor 0;

para (i = 0; i < 7; i++) {
    imprimir i;
}

imprimir "Fin del ciclo para";
imprimir saltoLinea;